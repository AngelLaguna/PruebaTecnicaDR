//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace frmTecnico.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PruebaTecnicaEntities : DbContext
    {
        public PruebaTecnicaEntities()
            : base("name=PruebaTecnicaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Estados> Estados { get; set; }
        public virtual DbSet<Persona> Persona { get; set; }
    
        public virtual int InsertaPersona(string nombre, string apPaterno, string apMaterno, Nullable<System.DateTime> fNacimiento, string sexo, string telefono, string estadoN, string estadoA, string delegacion, string colonia, string calle, string numero)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apPaternoParameter = apPaterno != null ?
                new ObjectParameter("ApPaterno", apPaterno) :
                new ObjectParameter("ApPaterno", typeof(string));
    
            var apMaternoParameter = apMaterno != null ?
                new ObjectParameter("ApMaterno", apMaterno) :
                new ObjectParameter("ApMaterno", typeof(string));
    
            var fNacimientoParameter = fNacimiento.HasValue ?
                new ObjectParameter("FNacimiento", fNacimiento) :
                new ObjectParameter("FNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var estadoNParameter = estadoN != null ?
                new ObjectParameter("EstadoN", estadoN) :
                new ObjectParameter("EstadoN", typeof(string));
    
            var estadoAParameter = estadoA != null ?
                new ObjectParameter("EstadoA", estadoA) :
                new ObjectParameter("EstadoA", typeof(string));
    
            var delegacionParameter = delegacion != null ?
                new ObjectParameter("Delegacion", delegacion) :
                new ObjectParameter("Delegacion", typeof(string));
    
            var coloniaParameter = colonia != null ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertaPersona", nombreParameter, apPaternoParameter, apMaternoParameter, fNacimientoParameter, sexoParameter, telefonoParameter, estadoNParameter, estadoAParameter, delegacionParameter, coloniaParameter, calleParameter, numeroParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SelectIdEstado(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SelectIdEstado", estadoParameter);
        }
    
        public virtual ObjectResult<SelectAllPersonas_Result> SelectAllPersonas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllPersonas_Result>("SelectAllPersonas");
        }
    }
}
